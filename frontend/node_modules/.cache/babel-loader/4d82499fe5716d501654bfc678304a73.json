{"ast":null,"code":"/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nvar levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4\n};\n\n/**\n * @type {number}\n */\nvar level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\nexport function log() {\n  var _console;\n  if (level > levels.info) {\n    return;\n  }\n  (_console = console).log.apply(_console, arguments); // eslint-disable-line no-console\n}\n\nexport function warn() {\n  var _console2;\n  if (level > levels.warn) {\n    return;\n  }\n  (_console2 = console).warn.apply(_console2, arguments); // eslint-disable-line no-console\n}\n\nexport function error() {\n  var _console3;\n  if (level > levels.error) {\n    return;\n  }\n  (_console3 = console).error.apply(_console3, arguments); // eslint-disable-line no-console\n}","map":null,"metadata":{},"sourceType":"module"}