{"ast":null,"code":"import _classCallCheck from \"/Users/kapigoku/Documents/Cosas/Programacio\\u0301n/Phyton/Seatrack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kapigoku/Documents/Cosas/Programacio\\u0301n/Phyton/Seatrack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kapigoku/Documents/Cosas/Programacio\\u0301n/Phyton/Seatrack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kapigoku/Documents/Cosas/Programacio\\u0301n/Phyton/Seatrack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kapigoku/Documents/Cosas/Programacio\\u0301n/Phyton/Seatrack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /*#__PURE__*/function (_Disposable) {\n  _inherits(RenderBox, _Disposable);\n  /**\n   * @param {string} className CSS class name.\n   */\n  function RenderBox(className) {\n    var _this;\n    _classCallCheck(this, RenderBox);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RenderBox).call(this));\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    _this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    _this.element_ = document.createElement('div');\n    _this.element_.style.position = 'absolute';\n    _this.element_.style.pointerEvents = 'auto';\n    _this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    _this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    _this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    _this.endPixel_ = null;\n    return _this;\n  }\n\n  /**\n   * Clean up.\n   */\n  _createClass(RenderBox, [{\n    key: \"disposeInternal\",\n    value: function disposeInternal() {\n      this.setMap(null);\n    }\n    /**\n     * @private\n     */\n  }, {\n    key: \"render_\",\n    value: function render_() {\n      var startPixel = this.startPixel_;\n      var endPixel = this.endPixel_;\n      var px = 'px';\n      var style = this.element_.style;\n      style.left = Math.min(startPixel[0], endPixel[0]) + px;\n      style.top = Math.min(startPixel[1], endPixel[1]) + px;\n      style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n      style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    }\n    /**\n     * @param {import(\"../Map.js\").default|null} map Map.\n     */\n  }, {\n    key: \"setMap\",\n    value: function setMap(map) {\n      if (this.map_) {\n        this.map_.getOverlayContainer().removeChild(this.element_);\n        var style = this.element_.style;\n        style.left = 'inherit';\n        style.top = 'inherit';\n        style.width = 'inherit';\n        style.height = 'inherit';\n      }\n      this.map_ = map;\n      if (this.map_) {\n        this.map_.getOverlayContainer().appendChild(this.element_);\n      }\n    }\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n  }, {\n    key: \"setPixels\",\n    value: function setPixels(startPixel, endPixel) {\n      this.startPixel_ = startPixel;\n      this.endPixel_ = endPixel;\n      this.createOrUpdateGeometry();\n      this.render_();\n    }\n    /**\n     * Creates or updates the cached geometry.\n     */\n  }, {\n    key: \"createOrUpdateGeometry\",\n    value: function createOrUpdateGeometry() {\n      var startPixel = this.startPixel_;\n      var endPixel = this.endPixel_;\n      var pixels = [startPixel, [startPixel[0], endPixel[1]], endPixel, [endPixel[0], startPixel[1]]];\n      var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n      // close the polygon\n      coordinates[4] = coordinates[0].slice();\n      if (!this.geometry_) {\n        this.geometry_ = new Polygon([coordinates]);\n      } else {\n        this.geometry_.setCoordinates([coordinates]);\n      }\n    }\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n  }, {\n    key: \"getGeometry\",\n    value: function getGeometry() {\n      return this.geometry_;\n    }\n  }]);\n  return RenderBox;\n}(Disposable);\nexport default RenderBox;","map":null,"metadata":{},"sourceType":"module"}