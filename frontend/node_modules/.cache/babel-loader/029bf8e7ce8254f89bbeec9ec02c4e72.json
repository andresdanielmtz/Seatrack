{"ast":null,"code":"!function (t, i) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = i() : \"function\" == typeof define && define.amd ? define(i) : (t = t || self).RBush = i();\n}(this, function () {\n  \"use strict\";\n\n  function t(t, r, e, a, h) {\n    !function t(n, r, e, a, h) {\n      for (; a > e;) {\n        if (a - e > 600) {\n          var o = a - e + 1,\n            s = r - e + 1,\n            l = Math.log(o),\n            f = .5 * Math.exp(2 * l / 3),\n            u = .5 * Math.sqrt(l * f * (o - f) / o) * (s - o / 2 < 0 ? -1 : 1),\n            m = Math.max(e, Math.floor(r - s * f / o + u)),\n            c = Math.min(a, Math.floor(r + (o - s) * f / o + u));\n          t(n, r, m, c, h);\n        }\n        var p = n[r],\n          d = e,\n          x = a;\n        for (i(n, e, r), h(n[a], p) > 0 && i(n, e, a); d < x;) {\n          for (i(n, d, x), d++, x--; h(n[d], p) < 0;) d++;\n          for (; h(n[x], p) > 0;) x--;\n        }\n        0 === h(n[e], p) ? i(n, e, x) : i(n, ++x, a), x <= r && (e = x + 1), r <= x && (a = x - 1);\n      }\n    }(t, r, e || 0, a || t.length - 1, h || n);\n  }\n  function i(t, i, n) {\n    var r = t[i];\n    t[i] = t[n], t[n] = r;\n  }\n  function n(t, i) {\n    return t < i ? -1 : t > i ? 1 : 0;\n  }\n  var r = function r(t) {\n    void 0 === t && (t = 9), this._maxEntries = Math.max(4, t), this._minEntries = Math.max(2, Math.ceil(.4 * this._maxEntries)), this.clear();\n  };\n  function e(t, i, n) {\n    if (!n) return i.indexOf(t);\n    for (var r = 0; r < i.length; r++) if (n(t, i[r])) return r;\n    return -1;\n  }\n  function a(t, i) {\n    h(t, 0, t.children.length, i, t);\n  }\n  function h(t, i, n, r, e) {\n    e || (e = p(null)), e.minX = 1 / 0, e.minY = 1 / 0, e.maxX = -1 / 0, e.maxY = -1 / 0;\n    for (var a = i; a < n; a++) {\n      var h = t.children[a];\n      o(e, t.leaf ? r(h) : h);\n    }\n    return e;\n  }\n  function o(t, i) {\n    return t.minX = Math.min(t.minX, i.minX), t.minY = Math.min(t.minY, i.minY), t.maxX = Math.max(t.maxX, i.maxX), t.maxY = Math.max(t.maxY, i.maxY), t;\n  }\n  function s(t, i) {\n    return t.minX - i.minX;\n  }\n  function l(t, i) {\n    return t.minY - i.minY;\n  }\n  function f(t) {\n    return (t.maxX - t.minX) * (t.maxY - t.minY);\n  }\n  function u(t) {\n    return t.maxX - t.minX + (t.maxY - t.minY);\n  }\n  function m(t, i) {\n    return t.minX <= i.minX && t.minY <= i.minY && i.maxX <= t.maxX && i.maxY <= t.maxY;\n  }\n  function c(t, i) {\n    return i.minX <= t.maxX && i.minY <= t.maxY && i.maxX >= t.minX && i.maxY >= t.minY;\n  }\n  function p(t) {\n    return {\n      children: t,\n      height: 1,\n      leaf: !0,\n      minX: 1 / 0,\n      minY: 1 / 0,\n      maxX: -1 / 0,\n      maxY: -1 / 0\n    };\n  }\n  function d(i, n, r, e, a) {\n    for (var h = [n, r]; h.length;) if (!((r = h.pop()) - (n = h.pop()) <= e)) {\n      var o = n + Math.ceil((r - n) / e / 2) * e;\n      t(i, o, n, r, a), h.push(n, o, o, r);\n    }\n  }\n  return r.prototype.all = function () {\n    return this._all(this.data, []);\n  }, r.prototype.search = function (t) {\n    var i = this.data,\n      n = [];\n    if (!c(t, i)) return n;\n    for (var r = this.toBBox, e = []; i;) {\n      for (var a = 0; a < i.children.length; a++) {\n        var h = i.children[a],\n          o = i.leaf ? r(h) : h;\n        c(t, o) && (i.leaf ? n.push(h) : m(t, o) ? this._all(h, n) : e.push(h));\n      }\n      i = e.pop();\n    }\n    return n;\n  }, r.prototype.collides = function (t) {\n    var i = this.data;\n    if (!c(t, i)) return !1;\n    for (var n = []; i;) {\n      for (var r = 0; r < i.children.length; r++) {\n        var e = i.children[r],\n          a = i.leaf ? this.toBBox(e) : e;\n        if (c(t, a)) {\n          if (i.leaf || m(t, a)) return !0;\n          n.push(e);\n        }\n      }\n      i = n.pop();\n    }\n    return !1;\n  }, r.prototype.load = function (t) {\n    if (!t || !t.length) return this;\n    if (t.length < this._minEntries) {\n      for (var i = 0; i < t.length; i++) this.insert(t[i]);\n      return this;\n    }\n    var n = this._build(t.slice(), 0, t.length - 1, 0);\n    if (this.data.children.length) {\n      if (this.data.height === n.height) this._splitRoot(this.data, n);else {\n        if (this.data.height < n.height) {\n          var r = this.data;\n          this.data = n, n = r;\n        }\n        this._insert(n, this.data.height - n.height - 1, !0);\n      }\n    } else this.data = n;\n    return this;\n  }, r.prototype.insert = function (t) {\n    return t && this._insert(t, this.data.height - 1), this;\n  }, r.prototype.clear = function () {\n    return this.data = p([]), this;\n  }, r.prototype.remove = function (t, i) {\n    if (!t) return this;\n    for (var n, r, a, h = this.data, o = this.toBBox(t), s = [], l = []; h || s.length;) {\n      if (h || (h = s.pop(), r = s[s.length - 1], n = l.pop(), a = !0), h.leaf) {\n        var f = e(t, h.children, i);\n        if (-1 !== f) return h.children.splice(f, 1), s.push(h), this._condense(s), this;\n      }\n      a || h.leaf || !m(h, o) ? r ? (n++, h = r.children[n], a = !1) : h = null : (s.push(h), l.push(n), n = 0, r = h, h = h.children[0]);\n    }\n    return this;\n  }, r.prototype.toBBox = function (t) {\n    return t;\n  }, r.prototype.compareMinX = function (t, i) {\n    return t.minX - i.minX;\n  }, r.prototype.compareMinY = function (t, i) {\n    return t.minY - i.minY;\n  }, r.prototype.toJSON = function () {\n    return this.data;\n  }, r.prototype.fromJSON = function (t) {\n    return this.data = t, this;\n  }, r.prototype._all = function (t, i) {\n    for (var n = []; t;) t.leaf ? i.push.apply(i, t.children) : n.push.apply(n, t.children), t = n.pop();\n    return i;\n  }, r.prototype._build = function (t, i, n, r) {\n    var e,\n      h = n - i + 1,\n      o = this._maxEntries;\n    if (h <= o) return a(e = p(t.slice(i, n + 1)), this.toBBox), e;\n    r || (r = Math.ceil(Math.log(h) / Math.log(o)), o = Math.ceil(h / Math.pow(o, r - 1))), (e = p([])).leaf = !1, e.height = r;\n    var s = Math.ceil(h / o),\n      l = s * Math.ceil(Math.sqrt(o));\n    d(t, i, n, l, this.compareMinX);\n    for (var f = i; f <= n; f += l) {\n      var u = Math.min(f + l - 1, n);\n      d(t, f, u, s, this.compareMinY);\n      for (var m = f; m <= u; m += s) {\n        var c = Math.min(m + s - 1, u);\n        e.children.push(this._build(t, m, c, r - 1));\n      }\n    }\n    return a(e, this.toBBox), e;\n  }, r.prototype._chooseSubtree = function (t, i, n, r) {\n    for (; r.push(i), !i.leaf && r.length - 1 !== n;) {\n      for (var e = 1 / 0, a = 1 / 0, h = void 0, o = 0; o < i.children.length; o++) {\n        var s = i.children[o],\n          l = f(s),\n          u = (m = t, c = s, (Math.max(c.maxX, m.maxX) - Math.min(c.minX, m.minX)) * (Math.max(c.maxY, m.maxY) - Math.min(c.minY, m.minY)) - l);\n        u < a ? (a = u, e = l < e ? l : e, h = s) : u === a && l < e && (e = l, h = s);\n      }\n      i = h || i.children[0];\n    }\n    var m, c;\n    return i;\n  }, r.prototype._insert = function (t, i, n) {\n    var r = n ? t : this.toBBox(t),\n      e = [],\n      a = this._chooseSubtree(r, this.data, i, e);\n    for (a.children.push(t), o(a, r); i >= 0 && e[i].children.length > this._maxEntries;) this._split(e, i), i--;\n    this._adjustParentBBoxes(r, e, i);\n  }, r.prototype._split = function (t, i) {\n    var n = t[i],\n      r = n.children.length,\n      e = this._minEntries;\n    this._chooseSplitAxis(n, e, r);\n    var h = this._chooseSplitIndex(n, e, r),\n      o = p(n.children.splice(h, n.children.length - h));\n    o.height = n.height, o.leaf = n.leaf, a(n, this.toBBox), a(o, this.toBBox), i ? t[i - 1].children.push(o) : this._splitRoot(n, o);\n  }, r.prototype._splitRoot = function (t, i) {\n    this.data = p([t, i]), this.data.height = t.height + 1, this.data.leaf = !1, a(this.data, this.toBBox);\n  }, r.prototype._chooseSplitIndex = function (t, i, n) {\n    for (var r, e, a, o, s, l, u, m = 1 / 0, c = 1 / 0, p = i; p <= n - i; p++) {\n      var d = h(t, 0, p, this.toBBox),\n        x = h(t, p, n, this.toBBox),\n        v = (e = d, a = x, o = void 0, s = void 0, l = void 0, u = void 0, o = Math.max(e.minX, a.minX), s = Math.max(e.minY, a.minY), l = Math.min(e.maxX, a.maxX), u = Math.min(e.maxY, a.maxY), Math.max(0, l - o) * Math.max(0, u - s)),\n        M = f(d) + f(x);\n      v < m ? (m = v, r = p, c = M < c ? M : c) : v === m && M < c && (c = M, r = p);\n    }\n    return r || n - i;\n  }, r.prototype._chooseSplitAxis = function (t, i, n) {\n    var r = t.leaf ? this.compareMinX : s,\n      e = t.leaf ? this.compareMinY : l;\n    this._allDistMargin(t, i, n, r) < this._allDistMargin(t, i, n, e) && t.children.sort(r);\n  }, r.prototype._allDistMargin = function (t, i, n, r) {\n    t.children.sort(r);\n    for (var e = this.toBBox, a = h(t, 0, i, e), s = h(t, n - i, n, e), l = u(a) + u(s), f = i; f < n - i; f++) {\n      var m = t.children[f];\n      o(a, t.leaf ? e(m) : m), l += u(a);\n    }\n    for (var c = n - i - 1; c >= i; c--) {\n      var p = t.children[c];\n      o(s, t.leaf ? e(p) : p), l += u(s);\n    }\n    return l;\n  }, r.prototype._adjustParentBBoxes = function (t, i, n) {\n    for (var r = n; r >= 0; r--) o(i[r], t);\n  }, r.prototype._condense = function (t) {\n    for (var i = t.length - 1, n = void 0; i >= 0; i--) 0 === t[i].children.length ? i > 0 ? (n = t[i - 1].children).splice(n.indexOf(t[i]), 1) : this.clear() : a(t[i], this.toBBox);\n  }, r;\n});","map":null,"metadata":{},"sourceType":"script"}