{"ast":null,"code":"import _classCallCheck from \"/Users/kapigoku/Documents/Cosas/Programacio\\u0301n/Phyton/Seatrack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kapigoku/Documents/Cosas/Programacio\\u0301n/Phyton/Seatrack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kapigoku/Documents/Cosas/Programacio\\u0301n/Phyton/Seatrack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kapigoku/Documents/Cosas/Programacio\\u0301n/Phyton/Seatrack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kapigoku/Documents/Cosas/Programacio\\u0301n/Phyton/Seatrack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*#__PURE__*/function (_DragBox) {\n  _inherits(DragZoom, _DragBox);\n  /**\n   * @param {Options} [options] Options.\n   */\n  function DragZoom(options) {\n    var _this;\n    _classCallCheck(this, DragZoom);\n    options = options ? options : {};\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DragZoom).call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea\n    }));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.out_ = options.out !== undefined ? options.out : false;\n    return _this;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  _createClass(DragZoom, [{\n    key: \"onBoxEnd\",\n    value: function onBoxEnd(event) {\n      var map = this.getMap();\n      var view = /** @type {!import(\"../View.js\").default} */map.getView();\n      var geometry = this.getGeometry();\n      if (this.out_) {\n        var rotatedExtent = view.rotatedExtentForGeometry(geometry);\n        var resolution = view.getResolutionForExtentInternal(rotatedExtent);\n        var factor = view.getResolution() / resolution;\n        geometry = geometry.clone();\n        geometry.scale(factor * factor);\n      }\n      view.fitInternal(geometry, {\n        duration: this.duration_,\n        easing: easeOut\n      });\n    }\n  }]);\n  return DragZoom;\n}(DragBox);\nexport default DragZoom;","map":null,"metadata":{},"sourceType":"module"}